{
    "version": "2.0.0",
    "tasks": [
        // https://medium.com/@aharon.amir/develop-c-on-docker-with-vscode-98fb85b818b2
        {
            "label": "Start Docker Container",
            "type": "shell",
            "command": "docker-compose -f compose.yml run --service-ports --name devenv dev-image bash",
            "windows": {
                "command": "docker-compose -f compose.win.yml run --service-ports --name devenv dev-image bash",
            },
            "problemMatcher": [],
            "dependsOn": "Stop Docker Container", // Restart if already running
            "runOptions": {
                "runOn": "folderOpen" // Run the container every time this folder is opened
            },
            "presentation": {
                "echo": false,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            }
        },
        {
            "label": "Stop Docker Container",
            "type": "shell",
            "command": "docker-compose -f compose.yml down",
            "windows": {
                "command": "docker-compose -f compose.win.yml down",
            },
            "problemMatcher": [],
            "presentation": {
                "echo": false,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            }
        },
        {
            "label": "Run CMake (Docker)",
            "type": "shell",
            "command": "docker exec -it -w  ${workspaceFolder}/build devenv cmake ..",
            "windows": {
                "command": "docker exec -it -w  /home/develop/eagle/build devenv cmake ..",
            },
            "problemMatcher": [],
        },
        {
            "label": "Run CMake (Local)",
            "type": "shell",
            "command": "cmake ..",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": [],
        },
        {
            "label": "Build All (Docker)",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "command": "docker exec -it -w  ${workspaceFolder}/build devenv make -j$(nproc)",
            "windows": {
                "command": "docker exec -it -w /home/develop/eagle/build devenv sh -c 'make -j $(nproc)'",
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Build All (Local)",
            "type": "shell",
            "command": "make -j$(nproc)",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Run Tests (Docker)",
            "type": "shell",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "command": "docker exec -it -w ${workspaceFolder}/build devenv sh -c 'make -j$(nproc) && make test'",
            "windows": {
                "command": "docker exec -it -w /home/develop/eagle/build devenv sh -c 'make -j$(nproc) && make test'",
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Run Tests (Local)",
            "type": "shell",
            "command": "make -j$(nproc) && make test",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Make Clean (Docker)",
            "type": "shell",
            "command": "docker exec -it -w ${workspaceFolder}/build devenv make clean",
            "windows": {
                "command": "docker exec -it -w /home/develop/eagle/build devenv make clean",
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Make Clean (Local)",
            "type": "shell",
            "command": "make clean",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "Start GDB Server",
            "type": "shell",
            // not using -it so that it can be a preLaunchTask
            "command": "docker exec -d devenv gdbserver localhost:2000  ${workspaceRoot}/build/bin/hello-world",
            "windows": {
                "command": "docker exec -d devenv gdbserver localhost:2000  /home/develop/eagle/build/bin/hello-world",
            },
            "problemMatcher": []
        },
        {
            "label": "Build Docker Image",
            "type": "shell",
            "command": "docker build -f Dockerfile --build-arg WORKSPACE_ROOT=${workspaceFolder} -t eagle1/baremetal/develop .",
            "windows": {
                "command": "docker build -f Dockerfile.win -t eagle1/baremetal/develop .",
            },
            "problemMatcher": []
        },
        {
            "label": "Run Application (Docker)",
            "type": "shell",
            "command": "docker exec -it devenv ${workspaceFolder}/build/bin/hello-world",
            "windows": {
                "command": "docker exec -it devenv /home/develop/eagle/build/bin/hello-world",
            },
            "problemMatcher": []
        },
        {
            "label": "Run Application (Local)",
            "type": "shell",
            "command": "./hello-world",
            "options": {
                "cwd": "${workspaceFolder}/build/bin"
            },
            "problemMatcher": []
        },
        {
            "label": "Stop Application (Docker)",
            "type": "shell",
            "command": "docker exec -d devenv pkill hello-world",
            "problemMatcher": []
        },
        {
            "label": "Generate Documentation",
            "type": "shell",
            "command": "rm -rf html && doxygen && sensible-browser html/index.html",
            "options": {
                "cwd": "${workspaceFolder}/doc"
            },
            "problemMatcher": []
        },
        {
            "label": "Clear 'build' Directory",
            "type": "shell",
            "command": "find ${workspaceFolder}/build -type f -not -name '.gitignore' -print0 | xargs -0 rm --",
            "windows": {
                "command": "Remove-Item ${workspaceFolder}/build/ -Recurse -Exclude .gitignore"
            },
            "problemMatcher": []
        }
    ]
}